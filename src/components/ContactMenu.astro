---
import HorizontalPoints from '@components/svg/contactMenu/HorizontalPoints.astro';
import VerticalPoints from '@components/svg/contactMenu/VerticalPoints.astro';
import Phone from '@components/svg/contactMenu/Phone.astro';
import PhoneHover from '@components/svg/contactMenu/PhoneHover.astro';
import Email from '@components/svg/contactMenu/Email.astro';
import EmailHover from '@components/svg/contactMenu/EmailHover.astro';
import Linkedin from '@components/svg/contactMenu/Linkedin.astro';
import LinkedinHover from '@components/svg/contactMenu/LinkedinHover.astro';
import Github from '@components/svg/contactMenu/Github.astro';
import GithubHover from '@components/svg/contactMenu/GithubHover.astro';
import { contactContent } from '@constants/content/contact';

interface Props {
  fromMobile?: boolean;
  fromContact?: boolean;
}

const { fromMobile = false, fromContact = false } = Astro.props;

const {
  contactMenuContent: { phone, email, linkedin, github },
} = contactContent;
---

{
  fromContact && (
    <div class="flex justify-center mt-10 mb-5">
      <HorizontalPoints />
    </div>
  )
}
<div
  class:list={[
    `contact-menu active`,
    { mobile: fromMobile },
    { contact: fromContact },
  ]}
>
  {
    !fromContact && (
      <div class="mb-5 xl:block hidden">
        <VerticalPoints />
      </div>
    )
  }
  <a href={`tel:${phone.value}`} class="contact-item group">
    <div class="group-hover:hidden block iconImg">
      <Phone />
    </div>
    <div class="group-hover:block hidden iconImg">
      <PhoneHover />
    </div>
  </a>
  <a href={`mailto:${email.value}`} class="contact-item group">
    <div class="group-hover:hidden block iconImg">
      <Email />
    </div>
    <div class="group-hover:block hidden iconImg">
      <EmailHover />
    </div>
  </a>
  <a href={linkedin.value} class="contact-item group" target="_blank">
    <div class="group-hover:hidden block iconImg">
      <Linkedin />
    </div>
    <div class="group-hover:block hidden iconImg">
      <LinkedinHover />
    </div>
  </a>
  <a href={github.value} class="contact-item group" target="_blank">
    <div class="group-hover:hidden block iconImg">
      <Github />
    </div>
    <div class="group-hover:block hidden iconImg">
      <GithubHover />
    </div>
  </a>
</div>

<style>
  .contact-menu {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    z-index: 15000;
    gap: 0.5rem;
    width: fit-content;

    .contact-item {
      cursor: pointer;
      transition: all 0.3s ease-in-out;

      .iconImg {
        width: 2.5rem;
        height: 2.5rem;
      }
    }

    .contact-item:hover {
      transform: translateX(7px);
    }
  }

  .contact-menu:not(.mobile):not(.contact) {
    > * {
      animation-duration: 1s;
      animation-iteration-count: 1;
      animation-name: show;
      animation-fill-mode: forwards;
      position: relative;
      left: -200px;
    }

    :nth-child(1) {
      animation-delay: 0.25s;
    }

    :nth-child(2) {
      animation-delay: 0.5s;
    }

    :nth-child(3) {
      animation-delay: 0.75s;
    }

    :nth-child(4) {
      animation-delay: 1s;
    }

    :nth-child(5) {
      animation-delay: 1.25s;
    }
  }

  .contact-menu:not(.mobile):not(.contact) {
    :nth-child(1) {
      animation-delay: 0s;
    }

    :nth-child(2) {
      animation-delay: 0.25s;
    }

    :nth-child(3) {
      animation-delay: 0.5s;
    }

    :nth-child(4) {
      animation-delay: 0.75s;
    }

    :nth-child(5) {
      animation-delay: 1s;
    }
  }

  @keyframes show {
    from {
      left: -200px;
    }

    to {
      left: 0;
    }
  }

  .contact-menu.contact {
    position: static;
    display: flex;
    flex-direction: row;
    gap: 1rem;
    width: 100%;
    margin-top: 2rem;

    .iconImg {
      width: 5rem;
      height: 5rem;
    }

    .contact-item {
      cursor: pointer;
      transition: all 0.2s ease-in;
    }

    .contact-item:hover {
      transform: translateY(-1rem);
    }
  }

  @media screen and (min-width: 768px) and (max-width: 1279px) {
    .contact-menu.mobile {
      .iconImg {
        width: 4rem;
        height: 4rem;
      }
    }

    .contact-menu.contact {
      gap: 0.75rem;

      .contact-item:hover {
        transform: translateY(-0.75rem);
      }

      .iconImg {
        width: 4.5rem;
        height: 4.5rem;
      }
    }
  }

  @media screen and (max-width: 767px) {
    .contact-menu.contact {
      flex-wrap: wrap;
      gap: 0.5rem;

      .contact-item:hover {
        transform: translateY(-0.5rem);
      }

      .iconImg {
        width: 3.5rem;
        height: 3.5rem;
      }
    }
  }

  @media screen and (max-width: 1279px) {
    .contact-menu:not(.mobile):not(.contact) {
      display: none;
    }

    .contact-menu.mobile {
      display: flex;
      position: unset;
      opacity: 1;
      flex-direction: row;
      width: 100%;

      .contact-item {
        cursor: pointer;
        transition: all 0.2s ease-in;
      }

      .contact-item:hover {
        transform: translateY(-5px);
      }
    }
  }
</style>
